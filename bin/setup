#!/usr/bin/env sh

# Set up app. Run this script immediately after cloning the codebase.
# https://github.com/thoughtbot/guides/tree/master/protocol

check_dependencies() {
  local dependency

  for dependency in cabal ghc psql; do
    if ! command -v "$dependency" >/dev/null; then
      printf "Missing dependency: %s\n" "$dependency" >&2
      exit 1
    fi
  done
}

create_databases() {
  createdb "$app" 2>/dev/null || true
  createdb "${app}_test" 2>/dev/null || true

  psql template1 > /dev/null <<SQL
    DO
    \$body\$
      BEGIN
        IF NOT EXISTS (SELECT * FROM pg_catalog.pg_user WHERE usename = '$user')
        THEN CREATE USER $user WITH PASSWORD '$user';
        END IF;
      END
    \$body\$;

    GRANT ALL PRIVILEGES ON DATABASE $app to $user;
    GRANT ALL PRIVILEGES ON DATABASE ${app}_test to $user;
SQL

  if ! test_connections > /dev/null; then
    printf "Couldn't connect to database\n" >&2
    exit 1
  fi
}

create_sandbox() {
  if [ ! -e .cabal-sandbox ]; then
    # Update Cabal
    cabal update
    cabal install cabal-install

    # Create a sandbox for the project
    cabal sandbox init

    # Install framework
    cabal install yesod-bin alex happy
  fi
}

install_dependencies() {
  cabal install --enable-tests --only-dependencies --avoid-reinstalls
}

check_sandbox_path() {
  case "$(command -v yesod)" in
    *cabal-sandbox*) : ;;
    *)
      printf "Error: couldn't find sandboxed yesod from PATH\n" >&2
      printf "Add ./.cabal-sandbox/bin to your PATH and run ./bin/setup again\n" >&2
      exit 1
      ;;
  esac
}

init_env_file() {
  [ -f ./.env ] && return 0

  local client_id client_secret

  cat <<EOF

Please enter the Client ID and Secret for the Carnival Development OAuth
application on Upcase

  https://upcase.com/oauth/applications/14

This is required to run a development instance with working authentication. You
may enter fake values for now and still be able to run tests or a development
instance without working authentication.

The values can be updated later by editing the generated ./.env file.

EOF

  printf "Client ID: "
  read client_id

  printf "Secret: "
  read client_secret

  cat > .env <<EOF
LEARN_OAUTH_CLIENT_ID="$client_id"
LEARN_OAUTH_CLIENT_SECRET="$client_secret"
EOF
}

test_connection() {
  local dbname="$1"
  PGPASSWORD=$user
  psql --username "$user" --dbname "$dbname" < /dev/null
}

test_connections() {
  test_connection "$app" &&
    test_connection "${app}_test"
}

app=carnival
user="$app"

set -e

check_dependencies

if [ "$TRAVIS" != "true" ]; then
  create_sandbox
  check_sandbox_path
  init_env_file
fi

install_dependencies
create_databases

# Print instructions
printf "\nSetup complete.\n"
printf "Run \`yesod devel\` to run the site.\n"

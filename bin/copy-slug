#!/bin/sh
#
# usage: copy-slug [FROM-APP] [TO-APP]
#
###
set -e

err_usage() {
  sed '/^# \(usage:.*\)/!d; s//\1/' "$0" >&2
  exit 64
}

err_no_jq() {
  cat >&2 <<EOF

  The jq program is required (it parses Heroku API responses).

  Please install it and try again.
  http://stedolan.github.io/jq/

EOF
  exit 1
}

curl_heroku() {
  local path="$1"; shift

  curl -n "$HEROKU$path" \
    -H "Content-Type: application/json" \
    -H 'Accept: application/vnd.heroku+json; version=3' "$@"
}

get_current_slug() {
  local app="$1" script='
    map(
      select(
        if .status == "succeeded" then true else false end
      )
    )
    | map(.slug.id) | join("\n")'

  curl_heroku "/apps/$app/builds" --silent |\
    jq --raw-output "$script" | tail -n 1
}

release_slug() {
  local app="$1" slug="$2"
  local data="$(printf '{"slug":"%s"}' "$slug")"

  curl_heroku "/apps/$app/releases" -# -X POST -d "$data"
}

if [ $# -lt 2 ]; then
  err_usage
fi

if ! command -v jq >/dev/null; then
  err_no_jq
fi

: ${HEROKU:=https://api.heroku.com}

build_app="$1"
deploy_app="$2"

printf "Determining current slug on %s...\n" "$build_app"
current_slug="$(get_current_slug "$build_app")"

if [ -z "$current_slug" ]; then
  printf "No slug found\n" >&2
  exit 1
fi

printf "Releasing slug %s to %s...\n" "$current_slug" "$deploy_app"
release_slug "$deploy_app" "$current_slug"

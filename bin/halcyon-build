#!/bin/sh
set -e

private_storage_setup() {
  [ -n "$HALCYON_AWS_ACCESS_KEY_ID" ] &&
  [ -n "$HALCYON_AWS_SECRET_ACCESS_KEY" ] &&
  [ -n "$HALCYON_S3_BUCKET" ]
}

[ -f ./.env ] && source ./.env

if [ "${NO_PRIVATE_STORAGE:-0}" -eq 0 ] && ! private_storage_setup; then
  cat >&2 <<EOF

ERROR: The Halcyon variables for AWS credentials are not set

This build would only use public S3 storage. That means it could build a lot
more things from scratch than expected and what gets built would not be cached
for future use.

https://halcyon.sh/reference/#private-storage-options

If you wish to continue without private storage, run this script again with
NO_PRIVATE_STORAGE=1 set in the environment.

EOF
  exit 1
fi

if [ ! -d /app/halcyon ]; then
  echo 'Installing halcyon...'
  git clone https://github.com/mietek/halcyon.git /app/halcyon
fi

# We don't care
export HALCYON_INTERNAL_TOLERATE_GHC_USER_DB=1

# Note --no-clean-private-storage ensures developers don't need to rebuild their
# stuff if another developer builds other versions for their own use (by
# default, halcyon keeps only one version per platform at a time).
/app/halcyon/halcyon build \
  --no-clean-private-storage --cabal-version=1.22.0.0 "$@"

ln -sf /app/sandbox/cabal.sandbox.config cabal.sandbox.config
